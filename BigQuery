SELECT *
FROM `Project_1.Covid_deaths`
Where continent is not NULL
order by 3,4

-- SELECT *
-- FROM `Project_1.Covid_vaccinations``
-- order by 3,4


-- Project Goal: Explore date in different ways
-- Below is the data we are focusing on
-- want to be able to look at data and visualize how you can share with others through graphs/charts  

--SELECT location, date, total_cases, new_cases, total_deaths, population 
--FROM `Project_1.Covid_deaths`
--order by 1,2 
-- ordering by 1, 2 organizes location and date (makes exploring easier)


-- QUE 1
-- Looking at total cases vs total deaths > divided deaths by cases in order to find death%
-- Shows the likelihood of dying if you contract covid in your country
-- chose to focus on just United States to makes things easier (can play with diff locations) 

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage
FROM `Project_1.Covid_deaths`
WHERE location like '%United States%'
order by 1,2 

-- QUE 2 
-- Looking at total cases vs population 
-- Shows what percentage of population got COVID 
SELECT location, date, population, total_cases, (total_cases/population)*100 as Percent_Population_Infected
FROM `Project_1.Covid_deaths`
WHERE location like '%United States%'
order by 1,2 

-- QUE 3
-- Looking at Countries with Highest Infection Rate compared to population 

SELECT location, population, MAX(total_cases) as Highest_Infection_Count, MAX((total_cases/population))*100 as Percent_Population_Infected
FROM `Project_1.Covid_deaths`
-- WHERE location like '%United States%'
GROUP BY location, population 
order by Percent_Population_Infected desc

-- QUE 4 
-- Showing Countries With Highest Death Count per Population 

SELECT location, MAX(cast(total_deaths as int)) as Total_Death_Count
FROM `Project_1.Covid_deaths`
-- WHERE location like '%United States%'
Where continent is not NULL
GROUP BY location
order by Total_Death_Count desc

-- QUE 5
-- Let's break things down by continent 

SELECT continent, MAX(cast(total_deaths as int)) as Total_Death_Count
FROM `Project_1.Covid_deaths`
-- WHERE location like '%United States%'
Where continent is not NULL
GROUP BY continent
order by Total_Death_Count desc

-- Que 6 
-- Showing continents with the highest death count per population

SELECT continent, MAX(cast(total_deaths as int)) as Total_Death_Count
FROM `Project_1.Covid_deaths`
-- WHERE location like '%United States%'
Where continent is not NULL
GROUP BY continent
order by Total_Death_Count desc

-- QUE 7
-- GLOBAL NUMBERS

SELECT DATE, SUM(new_cases) as total_cases, SUM (cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_cases)*100 as Death_Percentage
FROM `Project_1.Covid_deaths`
-- WHERE location like %United States%
where continent is not null
Group by date
order by 1,2

-- QUE 8 
-- Using JOIN function!Combining tables covid deaths and covid vaccinations

SELECT *
FROM `Project_1.Covid_deaths`dea
JOIN `Project_1.Covid_vaccinations`vac
  On dea.location = vac.location
  and dea.date = vac.date

-- QUE 9 
-- Looking at Total Population vs Vaccinations 

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS INT)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as rolling_people_vaccinated
FROM `Project_1.Covid_deaths`dea
JOIN `Project_1.Covid_vaccinations`vac
  On dea.location = vac.location
  and dea.date = vac.date
WHERE dea.continent is not null 
ORDER BY 2,3 
 

-- QUE 10
-- use CTE

With Pop_vs_Vac AS (
 SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS INT)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as rolling_people_vaccinated
 -- (rolling_people_vaccinated/population)*100 
FROM `Project_1.Covid_deaths`dea
JOIN `Project_1.Covid_vaccinations`vac
  On dea.location = vac.location
  and dea.date = vac.date
WHERE dea.continent is not null 
-- ORDER BY 2,3 
)
SELECT *
From Pop_vs_Vac

-- QUE 11
-- TEMP TABLE 

Create Table #Percent_Population_Vaccinated 

  Continent nvarchar(255),
  Location nvarchar(255),
  Date datetime, 
  Population numeric, 
  New_vaccinations numeric,
  Rolling_people_vaccinated numeric 


Insert into #Percent_Population_Vaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(CAST(vac.new_vaccinations AS INT)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as rolling_people_vaccinated
 -- (rolling_people_vaccinated/population)*100 
FROM `Project_1.Covid_deaths`dea
JOIN `Project_1.Covid_vaccinations`vac
  On dea.location = vac.location
  and dea.date = vac.date
WHERE dea.continent is not null 
-- ORDER BY 2,3 

SELECT *, (Rolling_people_vaccinated/Population)*100
From #Percent_Population_Vaccinated


-- QUE 12
-- Creating View to store data for later visualizations


Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject.CovidDeaths dea
Join PortfolioProject.CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
